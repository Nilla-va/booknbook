<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.cjcs.bnb.dao.BookMapper">

    <!-- 킹효진 -->
    <select id="findAll" resultType="com.cjcs.bnb.dto.BookDto">
        SELECT * FROM BOOK
    </select>

    <select id="bookAllList" resultType="com.cjcs.bnb.dto.BookDto">
SELECT * FROM (
    SELECT B.*, ROW_NUMBER() OVER (ORDER BY B.B_ISBN) AS rn
    FROM (
        SELECT DISTINCT B_ISBN FROM BOOK
    ) A
    JOIN (
        SELECT * FROM (
            SELECT BOOK.*, ROW_NUMBER() OVER (PARTITION BY B_ISBN ORDER BY B_PRICE ASC) AS rnk
            FROM BOOK
        ) WHERE rnk = 1
    ) B ON A.B_ISBN = B.B_ISBN
)
WHERE rn BETWEEN #{start} AND #{end}
</select>

 
<select id="countTotalBooks" resultType="int">
  SELECT COUNT(DISTINCT B_ISBN) FROM BOOK
</select>

<select id="findByIsbn" resultType="com.cjcs.bnb.dto.BookDto">
  SELECT * FROM BOOK WHERE B_ISBN = #{B_ISBN}
</select>

<select id="findBookByIsbnAndSellerId" resultType="com.cjcs.bnb.dto.BookDto">
    SELECT B.*, CS.category_m_id, CS.category_s, CM.category_m, s_storename
    FROM B, S, CATEGORY_M CM, CATEGORY_S CS
    WHERE b_s_id = s_id AND b_category_s_id = category_s_id AND CS.category_m_id = CM.category_m_id AND
          B_ISBN = #{isbn} AND B_S_ID = #{sellerId}
</select>

 <select id="findBookStock" resultType="com.cjcs.bnb.dto.BookDto">
    SELECT * FROM Book WHERE b_isbn = #{isbn} AND b_s_id = #{sellerId}
</select>

<!-- 키워드에 해당하는 책의 총 개수를 조회 -->
<select id="countKeyword" resultType="int">
  SELECT COUNT(DISTINCT B_ISBN) FROM BOOK WHERE UPPER(B_TITLE) LIKE UPPER('%' || #{keyword} || '%')
</select>

<!-- 키워드에 해당하는 책들을 페이지네이션하여 조회 -->
<select id="findByKwPg" resultType="com.cjcs.bnb.dto.BookDto">
SELECT * FROM (
    SELECT B.*, ROW_NUMBER() OVER (ORDER BY B.B_ISBN) AS rn
    FROM (
        SELECT DISTINCT B_ISBN FROM BOOK
        WHERE UPPER(B_TITLE) LIKE UPPER('%' || #{keyword} || '%')
    ) A
    JOIN (
        SELECT * FROM (
            SELECT BOOK.*, ROW_NUMBER() OVER (PARTITION BY B_ISBN ORDER BY B_PRICE ASC) AS rnk
            FROM BOOK
        ) WHERE rnk = 1
    ) B ON A.B_ISBN = B.B_ISBN
) 
WHERE rn BETWEEN #{start} AND #{end}
</select>


<!-- 카테고리별 조회 -->
<!-- 중분류 카테고리 조회 -->
<select id="findBooksByMediumCategory" resultType="com.cjcs.bnb.dto.BookDto">
SELECT * FROM (
    SELECT B.*, ROW_NUMBER() OVER (ORDER BY B.B_ISBN) AS rn
    FROM (
        SELECT DISTINCT B_ISBN FROM BOOK
        WHERE b_category_s_id IN (
          SELECT category_s_id FROM Category_S WHERE category_m_id = #{category_m_id}
        )
    ) A
    JOIN (
        SELECT * FROM (
            SELECT BOOK.*, ROW_NUMBER() OVER (PARTITION BY B_ISBN ORDER BY B_PRICE ASC) AS rnk
            FROM BOOK
        ) WHERE rnk = 1
    ) B ON A.B_ISBN = B.B_ISBN
  ) 
  WHERE rn BETWEEN #{start} AND #{end}
</select>

<select id="countBooksByMediumCategory" resultType="int">
  SELECT COUNT(DISTINCT B_ISBN) FROM BOOK WHERE b_category_s_id IN (
    SELECT category_s_id FROM Category_S WHERE category_m_id = #{category_m_id}
  )
</select>

 <!-- 소분류 카테고리 -->
<select id="findBooksBySmallCategory" resultType="com.cjcs.bnb.dto.BookDto">
SELECT * FROM (
    SELECT B.*, ROW_NUMBER() OVER (ORDER BY B.B_ISBN) AS rn
    FROM (
        SELECT DISTINCT B_ISBN FROM BOOK
        WHERE b_category_s_id = #{category_s_id}
    ) A
    JOIN (
        SELECT * FROM (
            SELECT BOOK.*, ROW_NUMBER() OVER (PARTITION BY B_ISBN ORDER BY B_PRICE ASC) AS rnk
            FROM BOOK
        ) WHERE rnk = 1
    ) B ON A.B_ISBN = B.B_ISBN
  ) 
  WHERE rn BETWEEN #{start} AND #{end}
</select>

<select id="countBooksBySmallCategory" resultType="int">
  SELECT COUNT(DISTINCT B_ISBN) FROM BOOK WHERE b_category_s_id = #{category_s_id}
</select>



<!-- 도서 상세 페이지 정보  -->
<select id="bookDetail" resultType="com.cjcs.bnb.dto.BookDto">
    SELECT B.*, S.s_storename
    FROM B, S
    WHERE B.b_s_id = S.s_id AND B.b_isbn = #{isbn} AND B.b_s_id = #{sellerId}
</select>


<select id="findBooksByIsbn" resultType="com.cjcs.bnb.dto.BookDto">
    SELECT B.*, S.s_storename 
    FROM B, S 
    WHERE B.b_s_id = S.s_id AND B.b_isbn = #{isbn}
    ORDER BY B.b_price ASC
</select>


<!-- 예림 -->
    <!-- 판매자 페이지 - 등록된 도서 리스트 조회 -->
    <select id="searchSellerBookList" resultType="BookDto" parameterType="map">
    SELECT CATEGORY_S, B_TITLE, B_AUTHOR, B_SALESTOCK, B_RENTALSTOCK
    FROM BOOK
    INNER JOIN CATEGORY_S ON BOOK.B_CATEGORY_S_ID = CATEGORY_S.CATEGORY_S_ID
    WHERE B_S_ID = #{s_id}
        <choose>
            <when test="filter == 'category'">
                AND UPPER(CATEGORY_S.CATEGORY_S) = UPPER(#{keyword})
            </when>
            <when test="filter == 'title'">
                AND UPPER(B_TITLE) LIKE '%' || UPPER(#{keyword}) || '%'
            </when>
            <when test="filter == 'author'">
                AND UPPER(B_AUTHOR) LIKE '%' || UPPER(#{keyword}) || '%'
            </when>
        </choose>
    </select>


<!-- 수희 -->

    <!-- 판매자페이지 신규도서등록시 이미 등록된 isbn인지 체크 -->
    <select id="getBookByIsbn" resultType="BookDto">
        SELECT * FROM B WHERE b_s_id = #{s_id} AND b_isbn = #{isbn}
    </select>

    <!-- 판매자페이지 신규도서등록 -->
    <insert id="addNewBook" parameterType="BookDto">
        INSERT INTO B(b_s_id, b_isbn, b_title, b_author, b_bookdesc,
                      b_forsale,
                      <if test="b_price != null">b_price,</if>
                      <if test="b_salestock != null">b_salestock,</if>
                      b_forrental,
                      <if test="b_rent != null">b_rent,</if>
                      <if test="b_rentalstock != null">b_rentalstock,</if>
                      b_regdate, b_category_s_id)
        VALUES(#{b_s_id}, #{b_isbn}, #{b_title}, #{b_author}, #{b_bookdesc},
               <if test="b_forsale != null">'Y',</if>
               <if test="b_forsale == null">'N',</if>
               <if test="b_price != null">#{b_price},</if>
               <if test="b_salestock != null">#{b_salestock},</if>
               <if test="b_forrental != null">'Y',</if>
               <if test="b_forrental == null">'N',</if>
               <if test="b_rent != null">#{b_rent},</if>
               <if test="b_rentalstock != null">#{b_rentalstock},</if>
               DEFAULT, #{b_category_s_id})
    </insert>

    <!-- 구매항목 구매수량만큼 판매재고에서 차감-->
    <update id="updateSaleStock">
        UPDATE B SET b_salestock = b_salestock - #{qty}
        WHERE b_s_id = #{s_id} AND b_isbn = #{b_isbn}
    </update>

    <!-- 대여항목 1만큼 대여재고에서 차감, 반납항목 1만큼 복원-->
    <update id="updateRentalStock">
        UPDATE B SET b_rentalstock = b_rentalstock - #{qty}
        WHERE b_s_id = #{s_id} AND b_isbn = #{b_isbn}
    </update>

    <!-- 카트내항목번호(cart_id)로 해당항목 판매재고,대여재고 조회 -->
    <select id="getStockInfo" parameterType="Integer" resultType="Map">
        SELECT b_salestock as "b_salestock", b_rentalstock as "b_rentalstock"
        FROM B, CART
        WHERE cart_id = #{cart_id} AND cart_s_id = b_s_id AND cart_b_isbn = b_isbn
    </select>
    

<select id="getAdditionalBookDetails" resultType="BookDto">
    SELECT b_forrental, b_forsale FROM Book WHERE b_s_id = #{sellerId}
</select>



</mapper>

 